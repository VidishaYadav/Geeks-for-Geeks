// Given an array of numbers, program to 
// arrange the numbers to form the 
// largest number 
import java.util.*; 

class GFG { 

	// The main function that prints the 
	// arrangement with the largest value. 
	// The function accepts a vector of strings	 
	static void printLargest(Vector<String> arr){ 
	
		Collections.sort(arr, new Comparator<String>(){ 

		// A comparison function which is used by 
		// sort() in printLargest() 
		@Override
		public int compare(String X, String Y) { 
		
		// first append Y at the end of X 
		String XY=X + Y; 
		
		// then append X at the end of Y 
		String YX=Y + X; 
		
		// Now see which of the two formed numbers 
		// is greater 
		return XY.compareTo(YX) > 0 ? -1:1; 
	} 
	}); 
		
	Iterator it = arr.iterator(); 

	while(it.hasNext()) 
		System.out.print(it.next()); 
	
	} 
	
	// driver program 
	public static void main (String[] args) { 
	    Scanner sc = new Scanner(System.in);
	    int n1= sc.nextInt();
		for(int a=0;a<n1;a++)
		{
		Vector<String> arr; 
		arr = new Vector<>(); 
		
		//output should be 6054854654 
	
		int n=sc.nextInt();
		for(int i=0;i<n;i++)
		{
		    arr.add(sc.next());
		}
		printLargest(arr); 
		System.out.println();
		}
		
	} 
} 
// This code is contributed by Shubham Juneja 
