/*This is a function problem.You only need to complete the function given below*/
/* A Binary Tree node
class Node
{
    int data;
    Node left, right;
    Node(int item)
    {
        data = item;
        left = right = null;
    }
}*/
class Tree
{
/* If n1 and n2 are present, return reference
   to LCA. If both are not present, return 
   null,. Else if left subtree contains any 
   of them return pointer to left.*/
	Node lca(Node node, int n1,int n2)
	{
		// Your code here
		if(node == null)
        return node;
        if(node.data == n1 || node.data == n2)
        return node;
        
        Node left = lca(node.left,n1,n2);
        Node right = lca(node.right,n1,n2);
        
        if(left == null && right == null)
        return null;
        if(left != null && right != null)
        return node;
        if(left != null)
        return left;
        
        return right;
	}
}
